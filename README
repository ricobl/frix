FRIX PHP FRAMEWORK

Frix is is a PHP web framework for rapid web development, inspired by
Django, a well-known python web framework.

The project was created some years ago as an attempt to conquer fame and
glory bringing a Django clone to the PHP world, taking as an advantage
the ease of finding PHP hosting in opposition to Python hosting.

Unfortunatelly, PHP OO isn't as good as Python's, making it difficult to
reproduce many Django basic features, specially when object introspection
was needed.

This project is discontinued, it's being shared just for fun, in case
someone finds it useful, it's not extensively tested to be used in
production on large websites.

INSTALLATION

Create a directory for your project and place an "index.php" file with
the following content:

	// Replace the path according to your setup
	require_once('path/to/frix/main.php');
	Frix::start();

Create a "config.php" file with, at least, the database configuration:

	$config['DB_URL'] = 'mysql://user:pass@localhost/database';

Frix has support for MySQL, but it's possible to create backends for
different databases. Take a look at frix/mod/Db and frix/mod/DbMysql.

The framework will automatically set some configuration variables but
customization is possible using a "config.php" file. For an overview of
available settings, take a look at the "default_config.php" file.

DATABASE STRUCTURE

Some of the	bundled apps have a "tables.sql" file that will create the
required database structure for the app.

Just create your database, and run all SQL scripts to generate the
initial structure.

STATIC MEDIA

Frix comes with some auxiliary static media files that need to be
mapped in the config file.

Your project may have its own media directory, with javascript, css, 
and image files as long as any user uploaded content.

For the bundled filebrowser app to work, the "upload" directory inside
the project's media directory must be writable.

